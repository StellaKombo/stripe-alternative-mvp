{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { WebView } from 'react-native-webview';\nimport { createClient } from '@supabase/supabase-js';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar SUPABASE_URL = 'https://mock-project.supabase.co';\nvar SUPABASE_ANON_KEY = 'mock-anon-key';\nvar BACKEND_URL = 'https://stripe-alt-backend-d8czhwstayhp.deno.dev';\nvar supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    subscription = _useState4[0],\n    setSubscription = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    paymentLoading = _useState8[0],\n    setPaymentLoading = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    showWebView = _useState0[0],\n    setShowWebView = _useState0[1];\n  var _useState1 = useState(''),\n    _useState10 = _slicedToArray(_useState1, 2),\n    webViewUrl = _useState10[0],\n    setWebViewUrl = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    paymentType = _useState12[0],\n    setPaymentType = _useState12[1];\n  var DEMO_USER_ID = '550e8400-e29b-41d4-a716-446655440000';\n  useEffect(function () {\n    loadUserData();\n  }, []);\n  var loadUserData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        setUser({\n          id: DEMO_USER_ID,\n          email: 'demo@example.com'\n        });\n        setSubscription({\n          id: 'mock-subscription-id',\n          user_id: DEMO_USER_ID,\n          plan: 'premium',\n          status: 'pending',\n          current_period_end: null,\n          created_at: new Date().toISOString()\n        });\n      } catch (error) {\n        console.error('Error loading user data:', error);\n        Alert.alert('Error', 'Failed to load user data');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function loadUserData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleCardPayment = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setPaymentLoading(true);\n        var response = yield fetch(`${BACKEND_URL}/api/primer/client-session`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            amount: 2999,\n            currency: 'USD',\n            userId: DEMO_USER_ID\n          })\n        });\n        var data = yield response.json();\n        if (!response.ok) {\n          throw new Error(data.error || 'Failed to create payment session');\n        }\n        var primerHtml = `\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <script src=\"https://sdk.primer.io/web/v2/primer.js\"></script>\n          <style>\n            body { \n              font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n              padding: 20px; \n              margin: 0;\n            }\n            #primer-container { \n              max-width: 400px; \n              margin: 0 auto; \n            }\n            .header {\n              text-align: center;\n              margin-bottom: 30px;\n            }\n            .amount {\n              font-size: 24px;\n              font-weight: bold;\n              color: #333;\n            }\n            .plan {\n              color: #666;\n              margin-top: 5px;\n            }\n          </style>\n        </head>\n        <body>\n          <div class=\"header\">\n            <div class=\"amount\">$29.99</div>\n            <div class=\"plan\">Premium Subscription</div>\n          </div>\n          <div id=\"primer-container\"></div>\n          \n          <script>\n            Primer.initialize({\n              clientToken: '${data.clientToken}',\n              onTokenizeSuccess: function(paymentMethodToken) {\n                // Send payment method token to your backend\n                fetch('${BACKEND_URL}/api/primer/create-payment', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                  },\n                  body: JSON.stringify({\n                    paymentMethodToken: paymentMethodToken,\n                    amount: 2999,\n                    currency: 'USD',\n                    userId: '${DEMO_USER_ID}'\n                  })\n                })\n                .then(response => response.json())\n                .then(data => {\n                  if (data.status === 'AUTHORIZED') {\n                    window.ReactNativeWebView.postMessage(JSON.stringify({\n                      type: 'PAYMENT_SUCCESS',\n                      data: data\n                    }));\n                  } else {\n                    window.ReactNativeWebView.postMessage(JSON.stringify({\n                      type: 'PAYMENT_ERROR',\n                      error: 'Payment failed'\n                    }));\n                  }\n                })\n                .catch(error => {\n                  window.ReactNativeWebView.postMessage(JSON.stringify({\n                    type: 'PAYMENT_ERROR',\n                    error: error.message\n                  }));\n                });\n              },\n              onError: function(error) {\n                window.ReactNativeWebView.postMessage(JSON.stringify({\n                  type: 'PAYMENT_ERROR',\n                  error: error.message\n                }));\n              }\n            });\n\n            // Render Universal Checkout\n            Primer.render('#primer-container');\n          </script>\n        </body>\n        </html>\n      `;\n        setWebViewUrl(`data:text/html;base64,${btoa(primerHtml)}`);\n        setPaymentType('card');\n        setShowWebView(true);\n      } catch (error) {\n        Alert.alert('Error', error.message);\n      } finally {\n        setPaymentLoading(false);\n      }\n    });\n    return function handleCardPayment() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleCryptoPayment = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        setPaymentLoading(true);\n        var response = yield fetch(`${BACKEND_URL}/api/crypto/charge`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            amount: 2999,\n            currency: 'USD',\n            userId: DEMO_USER_ID,\n            plan: 'premium'\n          })\n        });\n        var data = yield response.json();\n        if (!response.ok) {\n          throw new Error(data.error || 'Failed to create crypto charge');\n        }\n        setWebViewUrl(data.hostedUrl);\n        setPaymentType('crypto');\n        setShowWebView(true);\n      } catch (error) {\n        Alert.alert('Error', error.message);\n      } finally {\n        setPaymentLoading(false);\n      }\n    });\n    return function handleCryptoPayment() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleWebViewMessage = function handleWebViewMessage(event) {\n    try {\n      var message = JSON.parse(event.nativeEvent.data);\n      if (message.type === 'PAYMENT_SUCCESS') {\n        setShowWebView(false);\n        Alert.alert('Success', 'Payment completed successfully!', [{\n          text: 'OK',\n          onPress: function onPress() {\n            pollForSubscriptionUpdate();\n          }\n        }]);\n      } else if (message.type === 'PAYMENT_ERROR') {\n        setShowWebView(false);\n        Alert.alert('Error', message.error || 'Payment failed');\n      }\n    } catch (error) {\n      console.error('Error parsing WebView message:', error);\n    }\n  };\n  var pollForSubscriptionUpdate = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      setTimeout(function () {\n        setSubscription({\n          id: 'mock-subscription-id',\n          user_id: DEMO_USER_ID,\n          plan: 'premium',\n          status: 'active',\n          current_period_end: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n          created_at: new Date().toISOString()\n        });\n        Alert.alert('Success', 'Your subscription is now active!');\n      }, 2000);\n    });\n    return function pollForSubscriptionUpdate() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var getSubscriptionStatus = function getSubscriptionStatus() {\n    if (!subscription) return 'No active subscription';\n    var status = subscription.status;\n    var endDate = subscription.current_period_end ? new Date(subscription.current_period_end).toLocaleDateString() : 'N/A';\n    switch (status) {\n      case 'active':\n        return `Active until ${endDate}`;\n      case 'pending':\n        return 'Payment pending...';\n      case 'cancelled':\n        return 'Cancelled';\n      case 'expired':\n        return 'Expired';\n      default:\n        return status;\n    }\n  };\n  if (loading) {\n    return _jsx(SafeAreaView, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.centered,\n        children: [_jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"#007AFF\"\n        }), _jsx(Text, {\n          style: styles.loadingText,\n          children: \"Loading...\"\n        })]\n      })\n    });\n  }\n  if (showWebView) {\n    return _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.webViewHeader,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.closeButton,\n          onPress: function onPress() {\n            return setShowWebView(false);\n          },\n          children: _jsx(Text, {\n            style: styles.closeButtonText,\n            children: \"\\u2715 Close\"\n          })\n        }), _jsx(Text, {\n          style: styles.webViewTitle,\n          children: paymentType === 'card' ? 'Card Payment' : 'Crypto Payment'\n        })]\n      }), _jsx(WebView, {\n        source: {\n          uri: webViewUrl\n        },\n        style: styles.webView,\n        onMessage: handleWebViewMessage,\n        javaScriptEnabled: true,\n        domStorageEnabled: true,\n        startInLoadingState: true,\n        renderLoading: function renderLoading() {\n          return _jsx(View, {\n            style: styles.centered,\n            children: _jsx(ActivityIndicator, {\n              size: \"large\",\n              color: \"#007AFF\"\n            })\n          });\n        }\n      })]\n    });\n  }\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.scrollContent,\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Payment Demo\"\n        }), _jsx(Text, {\n          style: styles.subtitle,\n          children: \"Stripe Alternative MVP\"\n        })]\n      }), _jsxs(View, {\n        style: styles.userInfo,\n        children: [_jsx(Text, {\n          style: styles.userEmail,\n          children: user == null ? void 0 : user.email\n        }), _jsxs(Text, {\n          style: styles.subscriptionStatus,\n          children: [\"Status: \", getSubscriptionStatus()]\n        })]\n      }), _jsxs(View, {\n        style: styles.planCard,\n        children: [_jsx(Text, {\n          style: styles.planTitle,\n          children: \"Premium Plan\"\n        }), _jsx(Text, {\n          style: styles.planPrice,\n          children: \"$29.99/month\"\n        }), _jsxs(Text, {\n          style: styles.planFeatures,\n          children: [\"\\u2022 Unlimited access\", '\\n', \"\\u2022 Priority support\", '\\n', \"\\u2022 Advanced features\"]\n        })]\n      }), _jsxs(View, {\n        style: styles.paymentButtons,\n        children: [_jsx(TouchableOpacity, {\n          style: [styles.paymentButton, styles.cardButton],\n          onPress: handleCardPayment,\n          disabled: paymentLoading,\n          children: paymentLoading ? _jsx(ActivityIndicator, {\n            color: \"white\"\n          }) : _jsxs(_Fragment, {\n            children: [_jsx(Text, {\n              style: styles.paymentButtonText,\n              children: \"\\uD83D\\uDCB3 Pay with Card\"\n            }), _jsx(Text, {\n              style: styles.paymentButtonSubtext,\n              children: \"Visa, Mastercard, etc.\"\n            })]\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.paymentButton, styles.cryptoButton],\n          onPress: handleCryptoPayment,\n          disabled: paymentLoading,\n          children: paymentLoading ? _jsx(ActivityIndicator, {\n            color: \"white\"\n          }) : _jsxs(_Fragment, {\n            children: [_jsx(Text, {\n              style: styles.paymentButtonText,\n              children: \"\\u20BF Pay with Crypto\"\n            }), _jsx(Text, {\n              style: styles.paymentButtonSubtext,\n              children: \"Bitcoin, Ethereum, etc.\"\n            })]\n          })\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.refreshButton,\n        onPress: loadUserData,\n        children: _jsx(Text, {\n          style: styles.refreshButtonText,\n          children: \"\\uD83D\\uDD04 Refresh Status\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  scrollContent: {\n    padding: 20\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: '#666'\n  },\n  header: {\n    alignItems: 'center',\n    marginBottom: 30\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginTop: 5\n  },\n  userInfo: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 12,\n    marginBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  userEmail: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#333'\n  },\n  subscriptionStatus: {\n    fontSize: 14,\n    color: '#666',\n    marginTop: 5\n  },\n  planCard: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 12,\n    marginBottom: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  planTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  planPrice: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#007AFF',\n    marginVertical: 10\n  },\n  planFeatures: {\n    fontSize: 16,\n    color: '#666',\n    lineHeight: 24\n  },\n  paymentButtons: {\n    gap: 15,\n    marginBottom: 20\n  },\n  paymentButton: {\n    padding: 20,\n    borderRadius: 12,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  cardButton: {\n    backgroundColor: '#007AFF'\n  },\n  cryptoButton: {\n    backgroundColor: '#FF9500'\n  },\n  paymentButtonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  paymentButtonSubtext: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    fontSize: 14,\n    marginTop: 5\n  },\n  refreshButton: {\n    backgroundColor: '#34C759',\n    padding: 15,\n    borderRadius: 12,\n    alignItems: 'center'\n  },\n  refreshButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  webViewHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 15,\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0'\n  },\n  closeButton: {\n    padding: 10\n  },\n  closeButtonText: {\n    color: '#007AFF',\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  webViewTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#333',\n    flex: 1,\n    textAlign: 'center',\n    marginRight: 50\n  },\n  webView: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","StyleSheet","Alert","ActivityIndicator","SafeAreaView","ScrollView","WebView","createClient","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SUPABASE_URL","SUPABASE_ANON_KEY","BACKEND_URL","supabase","App","_useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","subscription","setSubscription","_useState5","_useState6","loading","setLoading","_useState7","_useState8","paymentLoading","setPaymentLoading","_useState9","_useState0","showWebView","setShowWebView","_useState1","_useState10","webViewUrl","setWebViewUrl","_useState11","_useState12","paymentType","setPaymentType","DEMO_USER_ID","loadUserData","_ref","_asyncToGenerator","id","email","user_id","plan","status","current_period_end","created_at","Date","toISOString","error","console","alert","apply","arguments","handleCardPayment","_ref2","response","fetch","method","headers","body","JSON","stringify","amount","currency","userId","data","json","ok","Error","primerHtml","clientToken","btoa","message","handleCryptoPayment","_ref3","hostedUrl","handleWebViewMessage","event","parse","nativeEvent","type","text","onPress","pollForSubscriptionUpdate","_ref4","setTimeout","now","getSubscriptionStatus","endDate","toLocaleDateString","style","styles","container","children","centered","size","color","loadingText","webViewHeader","closeButton","closeButtonText","webViewTitle","source","uri","webView","onMessage","javaScriptEnabled","domStorageEnabled","startInLoadingState","renderLoading","contentContainerStyle","scrollContent","header","title","subtitle","userInfo","userEmail","subscriptionStatus","planCard","planTitle","planPrice","planFeatures","paymentButtons","paymentButton","cardButton","disabled","paymentButtonText","paymentButtonSubtext","cryptoButton","refreshButton","refreshButtonText","create","flex","backgroundColor","padding","justifyContent","alignItems","marginTop","fontSize","marginBottom","fontWeight","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","marginVertical","lineHeight","gap","flexDirection","borderBottomWidth","borderBottomColor","textAlign","marginRight"],"sources":["/home/subuntu/Autoencoders/stripe-alternative-mvp/frontend/App.js"],"sourcesContent":["// Stripe Alternative MVP - React Native (Expo) Frontend\nimport React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  Alert,\n  ActivityIndicator,\n  SafeAreaView,\n  ScrollView,\n} from 'react-native';\nimport { WebView } from 'react-native-webview';\nimport { createClient } from '@supabase/supabase-js';\n\n// Configuration - Updated with your deployed backend\nconst SUPABASE_URL = 'https://mock-project.supabase.co'; // Mock mode - no real Supabase needed\nconst SUPABASE_ANON_KEY = 'mock-anon-key'; // Mock mode\nconst BACKEND_URL = 'https://stripe-alt-backend-d8czhwstayhp.deno.dev'; // Your actual Deno Deploy URL\n\nconst supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\n\nexport default function App() {\n  const [user, setUser] = useState(null);\n  const [subscription, setSubscription] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [paymentLoading, setPaymentLoading] = useState(false);\n  const [showWebView, setShowWebView] = useState(false);\n  const [webViewUrl, setWebViewUrl] = useState('');\n  const [paymentType, setPaymentType] = useState('');\n\n  // Demo user ID - in production, this would come from authentication\n  const DEMO_USER_ID = '550e8400-e29b-41d4-a716-446655440000';\n\n  useEffect(() => {\n    loadUserData();\n  }, []);\n\n  const loadUserData = async () => {\n    try {\n      setLoading(true);\n      \n      // Mock mode - simulate user data\n      setUser({ id: DEMO_USER_ID, email: 'demo@example.com' });\n      \n      // Mock subscription data - start with pending status\n      setSubscription({\n        id: 'mock-subscription-id',\n        user_id: DEMO_USER_ID,\n        plan: 'premium',\n        status: 'pending',\n        current_period_end: null,\n        created_at: new Date().toISOString()\n      });\n    } catch (error) {\n      console.error('Error loading user data:', error);\n      Alert.alert('Error', 'Failed to load user data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCardPayment = async () => {\n    try {\n      setPaymentLoading(true);\n\n      // Get client session from backend\n      const response = await fetch(`${BACKEND_URL}/api/primer/client-session`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          amount: 2999, // $29.99 in cents\n          currency: 'USD',\n          userId: DEMO_USER_ID,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to create payment session');\n      }\n\n      // Create Primer Universal Checkout HTML\n      const primerHtml = `\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <script src=\"https://sdk.primer.io/web/v2/primer.js\"></script>\n          <style>\n            body { \n              font-family: -apple-system, BlinkMacSystemFont, sans-serif; \n              padding: 20px; \n              margin: 0;\n            }\n            #primer-container { \n              max-width: 400px; \n              margin: 0 auto; \n            }\n            .header {\n              text-align: center;\n              margin-bottom: 30px;\n            }\n            .amount {\n              font-size: 24px;\n              font-weight: bold;\n              color: #333;\n            }\n            .plan {\n              color: #666;\n              margin-top: 5px;\n            }\n          </style>\n        </head>\n        <body>\n          <div class=\"header\">\n            <div class=\"amount\">$29.99</div>\n            <div class=\"plan\">Premium Subscription</div>\n          </div>\n          <div id=\"primer-container\"></div>\n          \n          <script>\n            Primer.initialize({\n              clientToken: '${data.clientToken}',\n              onTokenizeSuccess: function(paymentMethodToken) {\n                // Send payment method token to your backend\n                fetch('${BACKEND_URL}/api/primer/create-payment', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                  },\n                  body: JSON.stringify({\n                    paymentMethodToken: paymentMethodToken,\n                    amount: 2999,\n                    currency: 'USD',\n                    userId: '${DEMO_USER_ID}'\n                  })\n                })\n                .then(response => response.json())\n                .then(data => {\n                  if (data.status === 'AUTHORIZED') {\n                    window.ReactNativeWebView.postMessage(JSON.stringify({\n                      type: 'PAYMENT_SUCCESS',\n                      data: data\n                    }));\n                  } else {\n                    window.ReactNativeWebView.postMessage(JSON.stringify({\n                      type: 'PAYMENT_ERROR',\n                      error: 'Payment failed'\n                    }));\n                  }\n                })\n                .catch(error => {\n                  window.ReactNativeWebView.postMessage(JSON.stringify({\n                    type: 'PAYMENT_ERROR',\n                    error: error.message\n                  }));\n                });\n              },\n              onError: function(error) {\n                window.ReactNativeWebView.postMessage(JSON.stringify({\n                  type: 'PAYMENT_ERROR',\n                  error: error.message\n                }));\n              }\n            });\n\n            // Render Universal Checkout\n            Primer.render('#primer-container');\n          </script>\n        </body>\n        </html>\n      `;\n\n      setWebViewUrl(`data:text/html;base64,${btoa(primerHtml)}`);\n      setPaymentType('card');\n      setShowWebView(true);\n    } catch (error) {\n      Alert.alert('Error', error.message);\n    } finally {\n      setPaymentLoading(false);\n    }\n  };\n\n  const handleCryptoPayment = async () => {\n    try {\n      setPaymentLoading(true);\n\n      // Create crypto charge\n      const response = await fetch(`${BACKEND_URL}/api/crypto/charge`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          amount: 2999, // $29.99 in cents\n          currency: 'USD',\n          userId: DEMO_USER_ID,\n          plan: 'premium',\n        }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to create crypto charge');\n      }\n\n      // Open Coinbase Commerce hosted checkout\n      setWebViewUrl(data.hostedUrl);\n      setPaymentType('crypto');\n      setShowWebView(true);\n    } catch (error) {\n      Alert.alert('Error', error.message);\n    } finally {\n      setPaymentLoading(false);\n    }\n  };\n\n  const handleWebViewMessage = (event) => {\n    try {\n      const message = JSON.parse(event.nativeEvent.data);\n      \n      if (message.type === 'PAYMENT_SUCCESS') {\n        setShowWebView(false);\n        Alert.alert('Success', 'Payment completed successfully!', [\n          {\n            text: 'OK',\n            onPress: () => {\n              // Start polling for subscription update\n              pollForSubscriptionUpdate();\n            },\n          },\n        ]);\n      } else if (message.type === 'PAYMENT_ERROR') {\n        setShowWebView(false);\n        Alert.alert('Error', message.error || 'Payment failed');\n      }\n    } catch (error) {\n      console.error('Error parsing WebView message:', error);\n    }\n  };\n\n  const pollForSubscriptionUpdate = async () => {\n    // Mock mode - simulate subscription activation after payment\n    setTimeout(() => {\n      setSubscription({\n        id: 'mock-subscription-id',\n        user_id: DEMO_USER_ID,\n        plan: 'premium',\n        status: 'active',\n        current_period_end: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n        created_at: new Date().toISOString()\n      });\n      Alert.alert('Success', 'Your subscription is now active!');\n    }, 2000); // Simulate 2 second processing time\n  };\n\n  const getSubscriptionStatus = () => {\n    if (!subscription) return 'No active subscription';\n    \n    const status = subscription.status;\n    const endDate = subscription.current_period_end \n      ? new Date(subscription.current_period_end).toLocaleDateString()\n      : 'N/A';\n\n    switch (status) {\n      case 'active':\n        return `Active until ${endDate}`;\n      case 'pending':\n        return 'Payment pending...';\n      case 'cancelled':\n        return 'Cancelled';\n      case 'expired':\n        return 'Expired';\n      default:\n        return status;\n    }\n  };\n\n  if (loading) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.centered}>\n          <ActivityIndicator size=\"large\" color=\"#007AFF\" />\n          <Text style={styles.loadingText}>Loading...</Text>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  if (showWebView) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.webViewHeader}>\n          <TouchableOpacity\n            style={styles.closeButton}\n            onPress={() => setShowWebView(false)}\n          >\n            <Text style={styles.closeButtonText}>✕ Close</Text>\n          </TouchableOpacity>\n          <Text style={styles.webViewTitle}>\n            {paymentType === 'card' ? 'Card Payment' : 'Crypto Payment'}\n          </Text>\n        </View>\n        <WebView\n          source={{ uri: webViewUrl }}\n          style={styles.webView}\n          onMessage={handleWebViewMessage}\n          javaScriptEnabled={true}\n          domStorageEnabled={true}\n          startInLoadingState={true}\n          renderLoading={() => (\n            <View style={styles.centered}>\n              <ActivityIndicator size=\"large\" color=\"#007AFF\" />\n            </View>\n          )}\n        />\n      </SafeAreaView>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollContent}>\n        <View style={styles.header}>\n          <Text style={styles.title}>Payment Demo</Text>\n          <Text style={styles.subtitle}>Stripe Alternative MVP</Text>\n        </View>\n\n        <View style={styles.userInfo}>\n          <Text style={styles.userEmail}>{user?.email}</Text>\n          <Text style={styles.subscriptionStatus}>\n            Status: {getSubscriptionStatus()}\n          </Text>\n        </View>\n\n        <View style={styles.planCard}>\n          <Text style={styles.planTitle}>Premium Plan</Text>\n          <Text style={styles.planPrice}>$29.99/month</Text>\n          <Text style={styles.planFeatures}>\n            • Unlimited access{'\\n'}\n            • Priority support{'\\n'}\n            • Advanced features\n          </Text>\n        </View>\n\n        <View style={styles.paymentButtons}>\n          <TouchableOpacity\n            style={[styles.paymentButton, styles.cardButton]}\n            onPress={handleCardPayment}\n            disabled={paymentLoading}\n          >\n            {paymentLoading ? (\n              <ActivityIndicator color=\"white\" />\n            ) : (\n              <>\n                <Text style={styles.paymentButtonText}>💳 Pay with Card</Text>\n                <Text style={styles.paymentButtonSubtext}>Visa, Mastercard, etc.</Text>\n              </>\n            )}\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            style={[styles.paymentButton, styles.cryptoButton]}\n            onPress={handleCryptoPayment}\n            disabled={paymentLoading}\n          >\n            {paymentLoading ? (\n              <ActivityIndicator color=\"white\" />\n            ) : (\n              <>\n                <Text style={styles.paymentButtonText}>₿ Pay with Crypto</Text>\n                <Text style={styles.paymentButtonSubtext}>Bitcoin, Ethereum, etc.</Text>\n              </>\n            )}\n          </TouchableOpacity>\n        </View>\n\n        <TouchableOpacity\n          style={styles.refreshButton}\n          onPress={loadUserData}\n        >\n          <Text style={styles.refreshButtonText}>🔄 Refresh Status</Text>\n        </TouchableOpacity>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  scrollContent: {\n    padding: 20,\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: '#666',\n  },\n  header: {\n    alignItems: 'center',\n    marginBottom: 30,\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginTop: 5,\n  },\n  userInfo: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 12,\n    marginBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  userEmail: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#333',\n  },\n  subscriptionStatus: {\n    fontSize: 14,\n    color: '#666',\n    marginTop: 5,\n  },\n  planCard: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 12,\n    marginBottom: 30,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  planTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  planPrice: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#007AFF',\n    marginVertical: 10,\n  },\n  planFeatures: {\n    fontSize: 16,\n    color: '#666',\n    lineHeight: 24,\n  },\n  paymentButtons: {\n    gap: 15,\n    marginBottom: 20,\n  },\n  paymentButton: {\n    padding: 20,\n    borderRadius: 12,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  cardButton: {\n    backgroundColor: '#007AFF',\n  },\n  cryptoButton: {\n    backgroundColor: '#FF9500',\n  },\n  paymentButtonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  paymentButtonSubtext: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    fontSize: 14,\n    marginTop: 5,\n  },\n  refreshButton: {\n    backgroundColor: '#34C759',\n    padding: 15,\n    borderRadius: 12,\n    alignItems: 'center',\n  },\n  refreshButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  webViewHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 15,\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0',\n  },\n  closeButton: {\n    padding: 10,\n  },\n  closeButtonText: {\n    color: '#007AFF',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  webViewTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#333',\n    flex: 1,\n    textAlign: 'center',\n    marginRight: 50, // Offset for close button\n  },\n  webView: {\n    flex: 1,\n  },\n});\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAWnD,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,YAAY,QAAQ,uBAAuB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA,EAAAC,QAAA,IAAAC,SAAA;AAGrD,IAAMC,YAAY,GAAG,kCAAkC;AACvD,IAAMC,iBAAiB,GAAG,eAAe;AACzC,IAAMC,WAAW,GAAG,kDAAkD;AAEtE,IAAMC,QAAQ,GAAGV,YAAY,CAACO,YAAY,EAAEC,iBAAiB,CAAC;AAE9D,eAAe,SAASG,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAwBvB,QAAQ,CAAC,IAAI,CAAC;IAAAwB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,IAAAI,UAAA,GAAwC5B,QAAQ,CAAC,IAAI,CAAC;IAAA6B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAA8BhC,QAAQ,CAAC,IAAI,CAAC;IAAAiC,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAArCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAA4CpC,QAAQ,CAAC,KAAK,CAAC;IAAAqC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAApDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EACxC,IAAAG,UAAA,GAAsCxC,QAAQ,CAAC,KAAK,CAAC;IAAAyC,UAAA,GAAAhB,cAAA,CAAAe,UAAA;IAA9CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAAG,UAAA,GAAoC5C,QAAQ,CAAC,EAAE,CAAC;IAAA6C,WAAA,GAAApB,cAAA,CAAAmB,UAAA;IAAzCE,UAAU,GAAAD,WAAA;IAAEE,aAAa,GAAAF,WAAA;EAChC,IAAAG,WAAA,GAAsChD,QAAQ,CAAC,EAAE,CAAC;IAAAiD,WAAA,GAAAxB,cAAA,CAAAuB,WAAA;IAA3CE,WAAW,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EAGlC,IAAMG,YAAY,GAAG,sCAAsC;EAE3DnD,SAAS,CAAC,YAAM;IACdoD,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,YAAY;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC/B,IAAI;QACFpB,UAAU,CAAC,IAAI,CAAC;QAGhBR,OAAO,CAAC;UAAE6B,EAAE,EAAEJ,YAAY;UAAEK,KAAK,EAAE;QAAmB,CAAC,CAAC;QAGxD1B,eAAe,CAAC;UACdyB,EAAE,EAAE,sBAAsB;UAC1BE,OAAO,EAAEN,YAAY;UACrBO,IAAI,EAAE,SAAS;UACfC,MAAM,EAAE,SAAS;UACjBC,kBAAkB,EAAE,IAAI;UACxBC,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACrC,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD3D,KAAK,CAAC6D,KAAK,CAAC,OAAO,EAAE,0BAA0B,CAAC;MAClD,CAAC,SAAS;QACRhC,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAAA,gBAtBKkB,YAAYA,CAAA;MAAA,OAAAC,IAAA,CAAAc,KAAA,OAAAC,SAAA;IAAA;EAAA,GAsBjB;EAED,IAAMC,iBAAiB;IAAA,IAAAC,KAAA,GAAAhB,iBAAA,CAAG,aAAY;MACpC,IAAI;QACFhB,iBAAiB,CAAC,IAAI,CAAC;QAGvB,IAAMiC,QAAQ,SAASC,KAAK,CAAC,GAAGrD,WAAW,4BAA4B,EAAE;UACvEsD,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,MAAM,EAAE,IAAI;YACZC,QAAQ,EAAE,KAAK;YACfC,MAAM,EAAE7B;UACV,CAAC;QACH,CAAC,CAAC;QAEF,IAAM8B,IAAI,SAASV,QAAQ,CAACW,IAAI,CAAC,CAAC;QAElC,IAAI,CAACX,QAAQ,CAACY,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACjB,KAAK,IAAI,kCAAkC,CAAC;QACnE;QAGA,IAAMqB,UAAU,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8BJ,IAAI,CAACK,WAAW;AAC9C;AACA;AACA,yBAAyBnE,WAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+BgC,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;QAEDL,aAAa,CAAC,yBAAyByC,IAAI,CAACF,UAAU,CAAC,EAAE,CAAC;QAC1DnC,cAAc,CAAC,MAAM,CAAC;QACtBR,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOsB,KAAK,EAAE;QACd3D,KAAK,CAAC6D,KAAK,CAAC,OAAO,EAAEF,KAAK,CAACwB,OAAO,CAAC;MACrC,CAAC,SAAS;QACRlD,iBAAiB,CAAC,KAAK,CAAC;MAC1B;IACF,CAAC;IAAA,gBA3HK+B,iBAAiBA,CAAA;MAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GA2HtB;EAED,IAAMqB,mBAAmB;IAAA,IAAAC,KAAA,GAAApC,iBAAA,CAAG,aAAY;MACtC,IAAI;QACFhB,iBAAiB,CAAC,IAAI,CAAC;QAGvB,IAAMiC,QAAQ,SAASC,KAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}